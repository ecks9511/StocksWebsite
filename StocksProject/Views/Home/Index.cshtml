@using Chart.Mvc.ComplexChart
@using Newtonsoft.Json
@{ ViewData["Title"] = "Home Page"; }

<div class="text-center" style="margin-top: 2em">
    
    <h3 class="m-2">Top Technology Stocks</h3>

    <div style="width: 70%; height: 450px; margin-left: auto; margin-right: auto; margin-top: 2rem;"><canvas id="myChart"></canvas></div>
    <script src="lib/chart.js/dist/Chart.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

    <script>
        var dataObj = @Html.Raw(ViewData["AllStocksLanding"]);
        var datasetdata = [];

        var numEntries = dataObj.length;

        for (var i = 0; i < numEntries; i++) {
            var curNumEntries = dataObj[i].Entries.length;
            var curName = dataObj[i].Symbol;
            var curColor = ['rgba(255, 0, 0, 0.7)', 'rgba(255, 128, 0, 0.7)', 'rgba(0, 0, 255, 0.7)', 'rgba(127,0,255,1)', 'rgba(225, 0, 127, 0.7)', 'rgba(255, 0, 0, 0.7)', 'rgba(255, 128, 0, 0.7)', 'rgba(0, 0, 255, 0.7)', 'rgba(127,0,255,1)', 'rgba(225, 0, 127, 0.7)'];
            var curLabels = [];
            var curPriceData = [];
            for (var j = 0; j < curNumEntries; j++) {
                curPriceData[j] = dataObj[i].Entries[j].Open;
                curLabels[j] = dataObj[i].EntryDateTime[j];
            }
            //bandaid fix
            curLabels.reverse();
            curPriceData.reverse();
            datasetdata[i] = {
                label: curName,
                fill: false,
                data: curPriceData,
                backgroundColor: curColor[i],
                borderCapStyle: 'butt',
                borderDashOffset: 0.0,
                borderJoinStyle: 'miter',
                pointBorderColor: curColor[i],
                pointBackgroundColor: "#fff",
                pointBorderWidth: 1,
                pointHoverRadius: 5,
                pointHoverBackgroundColor: "rgba(75,192,192,1)",
                pointHoverBorderColor: "rgba(220,220,220,1)",
                pointHoverBorderWidth: 2,
                pointRadius: 2,
                pointHitRadius: 5,
                borderColor: curColor[i],
                borderWidth: 1.5,
                lineTension: 0
            }
        };

        function showChart() {
            var ctx = document.getElementById('myChart').getContext('2d');
            var myChart = new Chart(ctx,
                {
                    type: 'line',
                    data: {
                        labels: curLabels,
                        datasets: datasetdata,
                    },
                    options: {
                        maintainAspectRatio: false,
                        scales: {
                            yAxes: [
                                {
                                    ticks: {
                                        // Include a dollar sign in the ticks
                                        callback: function(value, index, values) {
                                            return '$' + value.toFixed(2);
                                        }
                                    }
                                }
                            ]
                        }
                    }
                });
        }

        showChart();

    </script>
    <div id="cardContainer" style="margin-bottom: 5em; margin-top: 2em;"></div>
    <script>
        var toAdd = document.createDocumentFragment();
        var target = document.getElementById("cardContainer");

        for (var i = 0; i < numEntries; i++) {
            var cardBorder = document.createElement('div');
            cardBorder.id = 'cardBorder_' + i;
            cardBorder.className = 'd-inline-block text-left card bg-light border-primary w-30 m-2';
            cardBorder.style = "max-width: 15rem;";
            toAdd.appendChild(cardBorder);
            var cardBody = document.createElement('div');
            cardBody.id = 'cardBody_' + i;
            cardBody.className = 'card-body';
            cardBorder.appendChild(cardBody);
            var cardTitle = document.createElement("h4");
            cardTitle.id = 'cardTitle_' + i;
            cardTitle.textContent = dataObj[i].Symbol;
            cardTitle.style = "margin-top: 0";
            cardBody.appendChild(cardTitle);
            var cardPrice = document.createElement("h5");
            cardPrice.id = 'cardPrice_' + i;
            cardPrice.textContent = 'Price : $' + dataObj[i].Entries[0].Open.toFixed(2);
            cardBody.appendChild(cardPrice);
            var cardDataSection = document.createElement('div');
            cardDataSection.style = "font-size: small; white-space: pre;";
            cardDataSection.textContent = "High Price : $" + dataObj[i].Entries[0].High.toFixed(2) + "\r\n";
            cardDataSection.textContent += "Low Price : $" + dataObj[i].Entries[0].Low.toFixed(2) + "\r\n";
            cardDataSection.textContent += "Close Price : $" + dataObj[i].Entries[0].Close.toFixed(2) + "\r\n";
            cardDataSection.textContent += "Volume : " + dataObj[i].Entries[0].Volume + "\r\n";
            cardBody.appendChild(cardDataSection);

        }
        target.appendChild(toAdd);
    </script>
</div>
