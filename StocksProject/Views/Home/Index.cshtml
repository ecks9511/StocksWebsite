@using Chart.Mvc.ComplexChart
@model AVAllData;
@{

    ViewData["Title"] = "Home Page";
}

<div class="text-center">

    <h3 class="m-2">Top Five Technology Stocks</h3>

    <div style="width: 70%; height: 500px; margin: 0 auto"><canvas id="myChart"></canvas></div>
    <script src="lib/chart.js/dist/Chart.js"></script>
    <script>
        showChart();

        function showChart() {
            console.log("Trying to show chart");
            var ctx = document.getElementById('myChart').getContext('2d');
            var myChart = new Chart(ctx,
                {
                    type: 'line',
                    data: {
                        labels: @Html.Raw(Json.Serialize(Model.allMonthlyData[0].EntryDateTime)),
                        datasets: [
                            {
                                label: 'Google',
                                fill: false,
                                data: @Html.Raw(Json.Serialize(Model.allMonthlyData[0].EntryOpenPrices)),
                                borderCapStyle: 'butt',
                                borderDash: [],
                                borderDashOffset: 0.0,
                                borderJoinStyle: 'miter',
                                pointBorderColor: "rgba(255,0,0,1)",
                                pointBackgroundColor: "#fff",
                                pointBorderWidth: 1,
                                pointHoverRadius: 5,
                                pointHoverBackgroundColor: "rgba(75,192,192,1)",
                                pointHoverBorderColor: "rgba(220,220,220,1)",
                                pointHoverBorderWidth: 2,
                                pointRadius: 2,
                                pointHitRadius: 5,
                                borderColor: [
                                    'rgba(255, 0, 0, 0.7)'
                                ],
                                borderWidth: 1.5,
                                lineTension: 0
                            },
                            {
                                label: 'Tesla',
                                fill: false,
                                data: @Html.Raw(Json.Serialize(Model.allMonthlyData[1].EntryOpenPrices)),
                                borderCapStyle: 'butt',
                                borderDash: [],
                                borderDashOffset: 0.0,
                                borderJoinStyle: 'miter',
                                pointBorderColor: "rgba(255,128,0,1)",
                                pointBackgroundColor: "#fff",
                                pointBorderWidth: 1,
                                pointHoverRadius: 5,
                                pointHoverBackgroundColor: "rgba(75,192,192,1)",
                                pointHoverBorderColor: "rgba(220,220,220,1)",
                                pointHoverBorderWidth: 2,
                                pointRadius: 2,
                                pointHitRadius: 5,
                                borderColor: [
                                    'rgba(255, 128, 0, 0.7)'
                                ],
                                borderWidth: 1.5,
                                lineTension: 0
                            },
                            {
                                label: 'Microsoft',
                                fill: false,
                                data: @Html.Raw(Json.Serialize(Model.allMonthlyData[2].EntryOpenPrices)),
                                borderCapStyle: 'butt',
                                borderDash: [],
                                borderDashOffset: 0.0,
                                borderJoinStyle: 'miter',
                                pointBorderColor: "rgba(0,0,255,1)",
                                pointBackgroundColor: "#fff",
                                pointBorderWidth: 1,
                                pointHoverRadius: 5,
                                pointHoverBackgroundColor: "rgba(75,192,192,1)",
                                pointHoverBorderColor: "rgba(220,220,220,1)",
                                pointHoverBorderWidth: 2,
                                pointRadius: 2,
                                pointHitRadius: 5,
                                borderColor: [
                                    'rgba(0, 0, 255, 0.7)'
                                ],
                                borderWidth: 1.5,
                                lineTension: 0
                            },
                            {
                                label: 'Amazon',
                                fill: false,
                                data: @Html.Raw(Json.Serialize(Model.allMonthlyData[3].EntryOpenPrices)),
                                borderCapStyle: 'butt',
                                borderDash: [],
                                borderDashOffset: 0.0,
                                borderJoinStyle: 'miter',
                                pointBorderColor: "rgba(127,0,255,1)",
                                pointBackgroundColor: "#fff",
                                pointBorderWidth: 1,
                                pointHoverRadius: 5,
                                pointHoverBackgroundColor: "rgba(75,192,192,1)",
                                pointHoverBorderColor: "rgba(220,220,220,1)",
                                pointHoverBorderWidth: 2,
                                pointRadius: 2,
                                pointHitRadius: 5,
                                borderColor: [
                                    'rgba(127, 0, 255, 0.7)'
                                ],
                                borderWidth: 1.5,
                                lineTension: 0
                            },
                            {
                                label: 'Apple',
                                fill: false,
                                data: @Html.Raw(Json.Serialize(Model.allMonthlyData[4].EntryOpenPrices)),
                                borderCapStyle: 'butt',
                                borderDash: [],
                                borderDashOffset: 0.0,
                                borderJoinStyle: 'miter',
                                pointBorderColor: "rgba(225,0,127,1)",
                                pointBackgroundColor: "#fff",
                                pointBorderWidth: 1,
                                pointHoverRadius: 5,
                                pointHoverBackgroundColor: "rgba(75,192,192,1)",
                                pointHoverBorderColor: "rgba(220,220,220,1)",
                                pointHoverBorderWidth: 2,
                                pointRadius: 2,
                                pointHitRadius: 5,
                                borderColor: [
                                    'rgba(225, 0, 127, 0.7)'
                                ],
                                borderWidth: 1.5,
                                lineTension: 0
                            }
                        ]
                    },
                    options: {
                        maintainAspectRatio: false
                    }
                });
        }


    </script>
    


    @for (int i = 0; i < @Model.allMonthlyData.Count(); i++)
    {
        <div class="d-inline-block text-left card bg-light border-primary w-30 m-2" style="max-width: 20rem">
            <div class="card-header">@Model.allMonthlyData[i].Name</div>
            <div class="card-body">
                <h4 class="card-title" style="margin-top: 0">@Model.allMonthlyData[i].Symbol</h4>
                <h5>Price : @Model.allMonthlyData[i].Entries[0].Open.ToString("C2")</h5>
                <div style="font-size: small">
                    <div>High Price : @Model.allMonthlyData[i].Entries[0].High.ToString("C2")</div>
                    <div>Low Price : @Model.allMonthlyData[i].Entries[0].Low.ToString("C2")</div>
                    <div>Close Price : @Model.allMonthlyData[i].Entries[0].Close.ToString("C2")</div>
                    <div>Adjusted Close : @Model.allMonthlyData[i].Entries[0].AdjustedClose.ToString("C2")</div>
                    <div>Volume : @Model.allMonthlyData[i].Entries[0].Volume.ToString()</div>
                    <div>Dividend Amount : @Model.allMonthlyData[i].Entries[0].DividendAmount.ToString("C2")</div>
                </div>
            </div>
        </div>
    }
</div>

