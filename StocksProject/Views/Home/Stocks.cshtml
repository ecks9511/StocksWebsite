@using Chart.Mvc.ComplexChart
@using ChartJSCore.Models
@using Newtonsoft.Json
@{

    ViewData["Title"] = "Stocks";
}

<div class="text-center m-5">

    <div style="width: 70%; height: 500px; margin: 0 auto"><canvas id="myChart2"></canvas></div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script>

        var dataObj = @Html.Raw(JsonConvert.SerializeObject(this.Model));
        var datasetdata = [];
        var numEntries = dataObj.allMonthlyData.length;

        for (var i = 0; i < numEntries; i++) {
            var curNumEntries = dataObj.allMonthlyData[i].Entries.length;
            var curName = dataObj.allMonthlyData[i].Symbol;
            var curColor = ['rgba(255, 0, 0, 0.7)', 'rgba(255, 128, 0, 0.7)', 'rgba(0, 0, 255, 0.7)', 'rgba(127,0,255,1)', 'rgba(225, 0, 127, 0.7)'];
            var curLabels = [];
            var curPriceData = [];

            for (var j = 0; j < curNumEntries; j++) {
                curPriceData[j] = dataObj.allMonthlyData[i].Entries[j].Open;
                curLabels[j] = dataObj.allMonthlyData[i].EntryDateTime[j];
            }
            //bandaid fix
            curLabels.reverse();
            curPriceData.reverse();

            datasetdata[i] = {
                label: curName,
                fill: false,
                data: curPriceData,
                borderCapStyle: 'butt',
                borderDashOffset: 0.0,
                borderJoinStyle: 'miter',
                pointBorderColor: curColor[i],
                pointBackgroundColor: "#fff",
                pointBorderWidth: 1,
                pointHoverRadius: 5,
                pointHoverBackgroundColor: "rgba(75,192,192,1)",
                pointHoverBorderColor: "rgba(220,220,220,1)",
                pointHoverBorderWidth: 2,
                pointRadius: 2,
                pointHitRadius: 5,
                borderColor: curColor[i],
                borderWidth: 1.5,
                lineTension: 0
            }
        };



        function showChart() {
            var ctx = document.getElementById('myChart2').getContext('2d');
            var myChart2 = new Chart(ctx,
                {
                    type: 'line',
                    data: {
                        labels: curLabels,
                        datasets: datasetdata,
                    },
                    options: {
                        maintainAspectRatio: false
                    }
                });
        }

        function fetchStock(model) {
            var text = $("#symbol").val();
            $.ajax({
                url: 'Home',
                data: { id: id },
            }).done(function() {
                alert('Added'); 
            });
        }

        showChart();

    </script>
</div> 
<input type="text" id="symbol">
<div class="btn-primary">
    <a onclick="fetchStock('@Model');" class="button"><span>Add to Cart</span></a>
</div>


